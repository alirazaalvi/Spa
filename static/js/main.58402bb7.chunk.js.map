{"version":3,"sources":["components/ticker/Ticker.jsx","helpers/index.js","components/common/Message.jsx","constants/index.js","actions/index.js","components/ticker/TickerContainer.jsx","components/App.jsx","reducers/MainReducer.js","reducers/index.js","stores/index.js","index.js"],"names":["Ticker","props","markets","marketData","chartData","legends","length","i","push","name","market","value","price","arrangeChartData","hasData","react_default","a","createElement","className","lib_default","option","tooltip","trigger","formatter","legend","orient","bottom","data","series","type","radius","center","itemStyle","emphasis","shadowBlur","shadowOffsetX","shadowColor","getChartOptions","style","height","defaultProps","Message","message","constants","FETCHED_TICKER","REFRESHING","ERROR_MESSAGE","toggleRefresh","refreshStatus","Constants","toggleErrorMessage","errorMessage","TickerContainer","_Component","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","dispatch","doApiCall","bind","assertThisInitialized","inherits","createClass","key","axios","get","then","response","catch","_this$props","refreshing","onClick","common_Message","ticker_Ticker","Component","connect","state","_state$MainReducer","MainReducer","toJSON","require","App","ticker_TickerContainer","Space","combineReducers","arguments","undefined","action","ticker","Store","createStore","reducer","applyMiddleware","reduxThunk","ReactDOM","render","es","store","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.58402bb7.chunk.js","sourcesContent":["import React from 'react';\nimport ReactEcharts from 'echarts-for-react';\nimport PropTypes from 'prop-types';\nimport { arrangeChartData, getChartOptions } from '../../helpers';\n\nconst Ticker = (props) => {\n  const { markets } = props;\n  const marketData = arrangeChartData(markets);\n\n  const hasData = markets && markets.length > 0;\n\n  return (\n    <div className=\"chart\">\n      {hasData && (\n      <ReactEcharts\n        option={getChartOptions(marketData)}\n        style={{ height: 500 }}\n      />)}\n    </div>\n  );\n};\n\nTicker.propTypes = {\n  markets: PropTypes.arrayOf(PropTypes.shape({})),\n};\n\nTicker.defaultProps = {\n  markets: [],\n};\n\nexport default Ticker;\n","export function arrangeChartData(markets) {\n  if (!markets) {\n    return { chartData: [], legends: [] };\n  }\n\n  const chartData = [];\n  const legends = [];\n\n  if (markets && markets.length > 0) {\n    for (let i = 0; i < markets.length; i++) { // eslint-disable-line no-plusplus\n      chartData.push({ name: markets[i].market, value: markets[i].price });\n      legends.push(markets[i].market);\n    }\n  }\n\n  return { chartData, legends };\n}\n\nexport function getChartOptions(marketData) {\n  const { chartData, legends } = marketData;\n  return {\n    tooltip: {\n      trigger: 'item',\n      formatter: 'Price : {c}',\n    },\n    legend: {\n      orient: 'horizontal',\n      bottom: 'bottom',\n      data: legends,\n    },\n    series: [\n      {\n        name: '',\n        type: 'pie',\n        radius: '55%',\n        center: ['50%', '60%'],\n        data: chartData,\n        itemStyle: {\n          emphasis: {\n            shadowBlur: 10,\n            shadowOffsetX: 0,\n            shadowColor: 'rgba(0, 0, 0, 0.5)',\n          },\n        },\n      },\n    ],\n  };\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Message = (props) => {\n  const { message } = props;\n  return <div className=\"err-text\">{message}</div>;\n};\n\nMessage.propTypes = {\n  message: PropTypes.string,\n};\n\nMessage.defaultProps = {\n  message: '',\n};\n\nexport default Message;\n","export default {\n  FETCHED_TICKER: 'FETCHED_TICKER',\n  REFRESHING: 'REFRESHING',\n  ERROR_MESSAGE: 'ERROR_MESSAGE',\n};\n","\nimport axios from 'axios';\nimport Constants from '../constants';\n\n\nexport function toggleRefresh(refreshStatus) {\n  return {\n    type: Constants.REFRESHING,\n    data: refreshStatus,\n  };\n}\n\nexport function toggleErrorMessage(errorMessage) {\n  return {\n    type: Constants.ERROR_MESSAGE,\n    data: errorMessage,\n  };\n}\n\n\n// Thunk action to fetch the list of hotels\nexport function fetchTicker() {\n  return (dispatch) => {\n    dispatch(toggleRefresh(true));\n\n    axios.get('https://api.cryptonator.com/api/full/btc-usd')\n      .then((response) => {\n        dispatch(toggleRefresh(false));\n\n        dispatch({\n          type: Constants.FETCHED_TICKER,\n          data: response.data,\n        });\n\n        dispatch(toggleErrorMessage(''));\n      })\n      .catch(() => {\n        dispatch(toggleRefresh(false));\n        dispatch(toggleErrorMessage('Oops! Something went wrong!. Please try again.'));\n      });\n  };\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Ticker from './Ticker';\nimport Message from '../common/Message';\nimport { fetchTicker } from '../../actions';\n\nexport class TickerContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.dispatch = props.dispatch;\n    this.doApiCall = this.doApiCall.bind(this);\n  }\n\n  componentDidMount() {\n    this.doApiCall();\n  }\n\n  // Dispatch an action to fetch ticker\n  doApiCall() {\n    this.dispatch(fetchTicker());\n\n    return true;\n  }\n\n  render() {\n    const { markets, refreshing, errorMessage } = this.props;\n    return (\n      <div>\n        <div className=\"page-header\">\n          <h1>Market Data</h1>\n          <input\n            className=\"button-primary\"\n            type=\"button\"\n            value={refreshing ? 'Loading' : 'Refresh'}\n            onClick={this.doApiCall}\n          />\n          <Message message={errorMessage} />\n        </div>\n        <Ticker markets={markets} />\n      </div>);\n  }\n}\n\nTickerContainer.propTypes = {\n  markets: PropTypes.arrayOf(PropTypes.shape({})),\n  refreshing: PropTypes.bool,\n  dispatch: PropTypes.func,\n  errorMessage: PropTypes.string,\n};\n\nTickerContainer.defaultProps = {\n  markets: [],\n  refreshing: false,\n  errorMessage: '',\n  dispatch: () => {},\n};\n\nfunction mapStateToProps(state) {\n  const { markets, refreshing, errorMessage } = state.MainReducer;\n  return {\n    markets: markets.toJSON(),\n    refreshing,\n    errorMessage,\n  };\n}\n\nexport default connect(mapStateToProps)(TickerContainer);\n","import React from 'react';\nimport TickerContainer from './ticker/TickerContainer'; // eslint-disable-line import/no-named-as-default\n\nrequire('milligram/dist/milligram.css');\nrequire('./../styles.css');\n\nconst App = () => (\n  <div className=\"container\">\n    <TickerContainer />\n  </div>\n);\n\nexport default App;\n","import Space from 'spaceace';\nimport Constants from '../constants';\n\nexport const data = new Space({ markets: [], refreshing: false, errorMessage: '' });\n\nexport default (state = data, action) => {\n  const type = action && action.type ? action.type : '';\n  switch (type) {\n    case Constants.FETCHED_TICKER:\n    {\n      return data({ markets: action.data.ticker.markets });\n    }\n    case Constants.REFRESHING:\n    {\n      return data({ refreshing: action.data });\n    }\n    case Constants.ERROR_MESSAGE:\n    {\n      return data({ errorMessage: action.data });\n    }\n    default:\n    {\n      return state;\n    }\n  }\n};\n","import { combineReducers } from 'redux';\nimport MainReducer from './MainReducer';\n\nexport default combineReducers({\n  MainReducer,\n});\n","import { createStore, applyMiddleware } from 'redux';\nimport reduxThunk from 'redux-thunk';\nimport reducer from '../reducers';\n\nconst Store = createStore(\n  reducer,\n  applyMiddleware(reduxThunk),\n);\n\nexport default Store;\n","/* eslint react/jsx-filename-extension: 0 */\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './components/App';\nimport Store from './stores';\n\nReactDOM.render(<Provider store={Store}><App /></Provider>, document.getElementById('root') || document.createElement('div'));\n"],"sourceRoot":""}